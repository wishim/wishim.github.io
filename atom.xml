<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WishIm&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wishim.github.io/"/>
  <updated>2017-01-16T18:12:46.000Z</updated>
  <id>https://wishim.github.io/</id>
  
  <author>
    <name>WishIm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elasticsearch数据备份与恢复</title>
    <link href="https://wishim.github.io/2017/01/17/elasticsearch-snapshot/"/>
    <id>https://wishim.github.io/2017/01/17/elasticsearch-snapshot/</id>
    <published>2017-01-16T18:12:46.000Z</published>
    <updated>2017-01-16T18:12:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近因为工作需求，学习并初步使用了ELK技术栈，因为开发过程中需要将生产环境的数据复制到本地环境中进行调试，所以查阅文档，了解了如何利用Elasticsearch数据的备份与恢复来实现数据迁移。<br><a id="more"></a></p>
<h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><h4 id="创建快照目录"><a href="#创建快照目录" class="headerlink" title="创建快照目录"></a>创建快照目录</h4><p>在系统中创建一个用于存放Elasearch快照的目录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir /data/els/snapshot</div></pre></td></tr></table></figure></p>
<p>这里需要注意的是，如果当前系统用户不是运行Elasearch进程的用户，则需修改snapshot目录权限为Elasearch所属用户（假设Elasearch用户为elsearch）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R elsearch:elsearch ./snapshot</div></pre></td></tr></table></figure></p>
<h4 id="修改Elasearch配置"><a href="#修改Elasearch配置" class="headerlink" title="修改Elasearch配置"></a>修改Elasearch配置</h4><p>打开Elasearch的配置<code>/config/elasticsearch.yml</code>，加入如下配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">path.repo: [&quot;/data/els/snapshot&quot;]</div></pre></td></tr></table></figure></p>
<h4 id="重启Elasearch"><a href="#重启Elasearch" class="headerlink" title="重启Elasearch"></a>重启Elasearch</h4><p>查询当前运行的Elasearch进程PID，使用kill命令直接关闭Elaseach。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ jps | grep Elasticsearch</div><div class="line">14542 Elasticsearch</div><div class="line">$ kill -SIGTERM 14542</div></pre></td></tr></table></figure></p>
<h4 id="设置快照备份路径"><a href="#设置快照备份路径" class="headerlink" title="设置快照备份路径"></a>设置快照备份路径</h4><p>为Elasearch创建快照路径：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">PUT /_snapshot/backup</div><div class="line">&#123;</div><div class="line">&quot;type&quot;:&quot;fs&quot;,</div><div class="line">&quot;settings&quot;:&#123;&quot;location&quot;:&quot;/data/els/snapshot&quot;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="备份快照"><a href="#备份快照" class="headerlink" title="备份快照"></a>备份快照</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PUT /_snapshot/backup/$filename?wait_for_completion=true&amp;pretty</div></pre></td></tr></table></figure>
<p>执行上述调用之后，可以看到<code>/data/els/snapshot</code>目录中已经出现若干文件了，将该目录打包下载到本地即可。</p>
<h2 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h2><p>首先按照数据备份步骤，也为本地的Elasearch创建快照目录。然后将数据备份步骤中下载回来的数据包解压到本地的快照目录，然后执行下面调用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">POST /_snapshot/backup/elsearch_201701161608/_restore</div></pre></td></tr></table></figure></p>
<p>如果调用结果返回<code>{&quot;accepted&quot;:true}</code>，则数据恢复成功。</p>
<h2 id="填坑"><a href="#填坑" class="headerlink" title="填坑"></a>填坑</h2><p>我在恢复数据时，遇到如下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;error&quot;:&#123;&quot;root_cause&quot;:[&#123;&quot;type&quot;:&quot;snapshot_restore_exception&quot;,&quot;reason&quot;:&quot;[backup:elsearch_201701161627/YjHbLk3ZTAGjHcm3HcNllA] cannot restore index [.kibana] because it&apos;s open&quot;&#125;],&quot;type&quot;:&quot;snapshot_restore_exception&quot;,&quot;reason&quot;:&quot;[backup:elsearch_201701161627/YjHbLk3ZTAGjHcm3HcNllA] cannot restore index [.kibana] because it&apos;s open&quot;&#125;,&quot;status&quot;:500&#125;</div></pre></td></tr></table></figure></p>
<p>按照错误提示，在执行备份之前，调用下面请求，将对应index关闭后再进行备份即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">POST /.kibana/_close</div></pre></td></tr></table></figure></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><p>官方文档：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html#_shared_file_system_repository" target="_blank" rel="external">Snapshot And Restore</a></p>
</li>
<li><p>官方文档：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-open-close.html#indices-open-close" target="_blank" rel="external">Open / Close Index API</a></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近因为工作需求，学习并初步使用了ELK技术栈，因为开发过程中需要将生产环境的数据复制到本地环境中进行调试，所以查阅文档，了解了如何利用Elasticsearch数据的备份与恢复来实现数据迁移。&lt;br&gt;
    
    </summary>
    
    
      <category term="Elasticsearch" scheme="https://wishim.github.io/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>在CentOS 7上使用StrongSwan搭建IPSec VPN</title>
    <link href="https://wishim.github.io/2017/01/03/using-strongswan-for-ipsec-vpn-on-centos7/"/>
    <id>https://wishim.github.io/2017/01/03/using-strongswan-for-ipsec-vpn-on-centos7/</id>
    <published>2017-01-02T18:37:25.000Z</published>
    <updated>2017-01-02T18:37:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>前两天在<a href="http://www.vultr.com/?ref=7076373-3B" target="_blank" rel="external">vultr</a>上买了一个东京机房的vps试用于翻墙，系统选用了CentOS 7，目前感觉比之前使用的<a href="https://bandwagonhost.com/aff.php?aff=12709" target="_blank" rel="external">搬瓦工</a>(机房位于FREMONT CA)要快上不少。以前安装vpn使用的是一键安装脚本，这次在vultr的机器上安装后连接失败，于是google一番，在vultr官网文档中找到了一篇如何在该系统下搭建IPSec VPN的教程(<a href="https://www.vultr.com/docs/using-strongswan-for-ipsec-vpn-on-centos-7" target="_blank" rel="external">点击阅读原文</a>)，按其步骤安装成功，现将其步骤记录下来。</p>
<h1 id="安装StrongSwan"><a href="#安装StrongSwan" class="headerlink" title="安装StrongSwan"></a>安装StrongSwan</h1><p>StrongSwan是一个开源的IPSec实现，支持IKEv1和IKEv2。CentOS的基础源中不包含其安装包，所以在安装StrongSwan之前需要先安装EPEL扩展源。<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install http://ftp.nluug.nl/pub/os/Linux/distr/fedora-epel/7/x86_64/e/epel-release-7-5.noarch.rpm</div></pre></td></tr></table></figure>
<p>由于网络原因或者服务器原因，可能导致EPEL源安装失败，当遇到链接无法访问时，可以到<a href="https://www.rpmfind.net" target="_blank" rel="external">rpmfind</a>搜索其他可用源。之后就可以安装我们的主角 <strong>StrongSwan</strong> 了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">y | yum install strongswan</div></pre></td></tr></table></figure>
<h1 id="证书生成"><a href="#证书生成" class="headerlink" title="证书生成"></a>证书生成</h1><p>已有证书或者熟悉证书生成步骤的读者可以跳过这一步。原文作者提供了两个脚本帮助我们能够更快捷地生成VPN服务器与客户端所需证书，请按下面步骤，进入StrongSwan的安装目录，下载这两个脚本并执行之。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd /etc/strongswan/ipsec.d</div><div class="line">wget https://raw.githubusercontent.com/michael-loo/strongswan_config/for_vultr/server_key.sh</div><div class="line">chmod a+x server_key.sh</div><div class="line">./server_key.sh SERVER_IP</div><div class="line">wget https://raw.githubusercontent.com/michael-loo/strongswan_config/for_vultr/client_key.sh</div><div class="line">chmod a+x client_key.sh</div><div class="line">./client_key.sh john john@gmail.com</div></pre></td></tr></table></figure>
<p>在执行<code>./server_key.sh SERVER_IP</code>时，请将SERVER_IP替换为自己VPS的实际IP地址。执行<code>./client_key.sh john john@gmail.com</code>请将<code>jonh</code>以及<code>john@gmai.com</code>替换为自己的用户名和邮件地址。<strong>在生成证书过程中，提示输入密码时请不要使用空密码，否则在客户端导入时可能会出现密码错误的情况</strong>。执行完证书生成脚本之后，请将<code>/etc/strongswan/ipsec.d/YOUR_NAME.p12</code>以及<br><code>/etc/strongswan/ipsec.d/cacerts/strongswanCert.pem</code>这两个文件下载到你本地机器上备用。</p>
<h1 id="配置StrongSwan"><a href="#配置StrongSwan" class="headerlink" title="配置StrongSwan"></a>配置StrongSwan</h1><p>使用vi打开StrongSwan的IPSec配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/strongswan/ipsec.conf</div></pre></td></tr></table></figure></p>
<p>使用下面内容替换原有内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">config setup</div><div class="line">    uniqueids=never</div><div class="line">    charondebug=&quot;cfg 2, dmn 2, ike 2, net 0&quot;</div><div class="line"></div><div class="line">conn %default</div><div class="line">    left=%defaultroute</div><div class="line">    leftsubnet=0.0.0.0/0</div><div class="line">    leftcert=vpnHostCert.pem</div><div class="line">    right=%any</div><div class="line">    rightsourceip=172.16.1.100/16</div><div class="line"></div><div class="line">conn CiscoIPSec</div><div class="line">    keyexchange=ikev1</div><div class="line">    fragmentation=yes</div><div class="line">    rightauth=pubkey</div><div class="line">    rightauth2=xauth</div><div class="line">    leftsendcert=always</div><div class="line">    rekey=no</div><div class="line">    auto=add</div><div class="line"></div><div class="line">conn XauthPsk</div><div class="line">    keyexchange=ikev1</div><div class="line">    leftauth=psk</div><div class="line">    rightauth=psk</div><div class="line">    rightauth2=xauth</div><div class="line">    auto=add</div><div class="line"></div><div class="line">conn IpsecIKEv2</div><div class="line">    keyexchange=ikev2</div><div class="line">    leftauth=pubkey</div><div class="line">    rightauth=pubkey</div><div class="line">    leftsendcert=always</div><div class="line">    auto=add</div><div class="line"></div><div class="line">conn IpsecIKEv2-EAP</div><div class="line">    keyexchange=ikev2</div><div class="line">    ike=aes256-sha1-modp1024!</div><div class="line">    rekey=no</div><div class="line">    leftauth=pubkey</div><div class="line">    leftsendcert=always</div><div class="line">    rightauth=eap-mschapv2</div><div class="line">    eap_identity=%any</div><div class="line">    auto=add</div></pre></td></tr></table></figure></p>
<p>打开StrongSwan配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/strongswan/strongswan.conf</div></pre></td></tr></table></figure></p>
<p>将其内容替换如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">charon &#123;</div><div class="line">    load_modular = yes</div><div class="line">    duplicheck.enable = no</div><div class="line">    compress = yes</div><div class="line">    plugins &#123;</div><div class="line">            include strongswan.d/charon/*.conf</div><div class="line">    &#125;</div><div class="line">    dns1 = 8.8.8.8</div><div class="line">    dns2 = 8.8.4.4</div><div class="line">    nbns1 = 8.8.8.8</div><div class="line">    nbns2 = 8.8.4.4</div><div class="line">&#125;</div><div class="line"></div><div class="line">include strongswan.d/*.conf</div></pre></td></tr></table></figure></p>
<p>打开<code>ipsec.secrets</code>文件添加VPN账号信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/strongswan/ipsec.secrets</div></pre></td></tr></table></figure></p>
<p>以账号<code>john</code>为例，添加如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">: RSA vpnHostKey.pem</div><div class="line">: PSK &quot;PSK_KEY&quot;</div><div class="line">john %any : EAP &quot;John&apos;s Password&quot;</div><div class="line">john %any : XAUTH &quot;John&apos;s Password&quot;</div></pre></td></tr></table></figure></p>
<p>其中PSK为预共享密钥，可自行修改。另外，<strong>请注意，上面的冒号左右两边各需一个空格。</strong></p>
<h1 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h1><h2 id="打开IPv4转发功能"><a href="#打开IPv4转发功能" class="headerlink" title="打开IPv4转发功能"></a>打开IPv4转发功能</h2><p>使用命令<code>vi /etc/sysctl.conf</code>打开<code>sysctl.conf</code>文件，并添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net.ipv4.ip_forward=1</div></pre></td></tr></table></figure></p>
<p>保存退出后，执行下面命令，使配置生效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -p</div></pre></td></tr></table></figure></p>
<h2 id="添加防火墙规则"><a href="#添加防火墙规则" class="headerlink" title="添加防火墙规则"></a>添加防火墙规则</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --add-service=&quot;ipsec&quot;</div><div class="line">firewall-cmd --permanent --add-port=4500/udp</div><div class="line">firewall-cmd --permanent --add-masquerade</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<p>之前我一直使用的是CentOS 6，防火墙使用iptables，所以在此次安装VPN的时候，开始依然使用iptables进行配置，但是重启后发现添加的规则总是被重置，经过google搜索才知道，CentOS 7中防火墙默认使用的是firewalld，如要正常使用iptables，还需进行一番配置修改。</p>
<h1 id="墙外的世界，我来了"><a href="#墙外的世界，我来了" class="headerlink" title="墙外的世界，我来了"></a>墙外的世界，我来了</h1><h2 id="启动VPN服务"><a href="#启动VPN服务" class="headerlink" title="启动VPN服务"></a>启动VPN服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl start strongswan</div><div class="line">systemctl enable strongswan</div></pre></td></tr></table></figure>
<p>输入以上命令，基于StrongSwan的IPSec VPN服务器搭建就大功告成了。</p>
<h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><h3 id="证书方式"><a href="#证书方式" class="headerlink" title="证书方式"></a>证书方式</h3><p>需将前面证书生成步骤中下载到本地的<code>p12</code>文件以及<code>pem</code>文件安装到本地系统中。由于我在Mac OS和iOS上都使用了PSK方式进行验证，所以尚不清楚证书方式的后续步骤。</p>
<h3 id="PSK方式"><a href="#PSK方式" class="headerlink" title="PSK方式"></a>PSK方式</h3><p>在Mac OS上，创建Cisco IPSec类型的VPN，然后填入服务器IP、用户名、用户密码，鉴定设置中选择共享密钥模式，填入PSK密钥，即可连入VPN。<br>在iOS上，创建IPSec类型的VPN，其余内容填写与Mac OS类似。</p>
<h1 id="小广告"><a href="#小广告" class="headerlink" title="小广告"></a>小广告</h1><p>最后打个广告，如果你想注册一个<a href="http://www.vultr.com/?ref=7076373-3B" target="_blank" rel="external">vultr</a>的vps，可以点击我的推荐链接，注册后可获赠20刀（需激活后30天并且至少消费10刀后获赠）。<br><a href="http://www.vultr.com/?ref=7076373-3B" target="_blank" rel="external">http://www.vultr.com/?ref=7076373-3B</a></p>
<p>如果想要更便宜点的，也可以考虑<a href="https://bandwagonhost.com/aff.php?aff=12709" target="_blank" rel="external">搬瓦工</a>，速度上虽然差一些，但胜在便宜，最低档的VPS一年才19刀。<br><a href="https://bandwagonhost.com/aff.php?aff=12709" target="_blank" rel="external">https://bandwagonhost.com/aff.php?aff=12709</a></p>
<p>以下是我使用的这两个VPS的ping值对比。<br><a href="http://www.vultr.com/?ref=7076373-3B" target="_blank" rel="external">vultr</a>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">64 bytes from x.x.x.x: icmp_seq=0 ttl=49 time=82.913 ms</div><div class="line">64 bytes from x.x.x.x: icmp_seq=1 ttl=49 time=82.925 ms</div><div class="line">64 bytes from x.x.x.x: icmp_seq=2 ttl=49 time=83.310 ms</div><div class="line">64 bytes from x.x.x.x: icmp_seq=3 ttl=49 time=82.762 ms</div><div class="line">64 bytes from x.x.x.x: icmp_seq=4 ttl=49 time=82.417 ms</div></pre></td></tr></table></figure></p>
<p><a href="https://bandwagonhost.com/aff.php?aff=12709" target="_blank" rel="external">搬瓦工</a>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">64 bytes from x.x.x.x: icmp_seq=0 ttl=51 time=274.089 ms</div><div class="line">64 bytes from x.x.x.x: icmp_seq=1 ttl=51 time=541.479 ms</div><div class="line">64 bytes from x.x.x.x: icmp_seq=2 ttl=51 time=276.555 ms</div><div class="line">64 bytes from x.x.x.x: icmp_seq=3 ttl=51 time=377.822 ms</div><div class="line">64 bytes from x.x.x.x: icmp_seq=4 ttl=51 time=294.163 ms</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前两天在&lt;a href=&quot;http://www.vultr.com/?ref=7076373-3B&quot;&gt;vultr&lt;/a&gt;上买了一个东京机房的vps试用于翻墙，系统选用了CentOS 7，目前感觉比之前使用的&lt;a href=&quot;https://bandwagonhost.com/aff.php?aff=12709&quot;&gt;搬瓦工&lt;/a&gt;(机房位于FREMONT CA)要快上不少。以前安装vpn使用的是一键安装脚本，这次在vultr的机器上安装后连接失败，于是google一番，在vultr官网文档中找到了一篇如何在该系统下搭建IPSec VPN的教程(&lt;a href=&quot;https://www.vultr.com/docs/using-strongswan-for-ipsec-vpn-on-centos-7&quot;&gt;点击阅读原文&lt;/a&gt;)，按其步骤安装成功，现将其步骤记录下来。&lt;/p&gt;
&lt;h1 id=&quot;安装StrongSwan&quot;&gt;&lt;a href=&quot;#安装StrongSwan&quot; class=&quot;headerlink&quot; title=&quot;安装StrongSwan&quot;&gt;&lt;/a&gt;安装StrongSwan&lt;/h1&gt;&lt;p&gt;StrongSwan是一个开源的IPSec实现，支持IKEv1和IKEv2。CentOS的基础源中不包含其安装包，所以在安装StrongSwan之前需要先安装EPEL扩展源。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://wishim.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://wishim.github.io/tags/linux/"/>
    
      <category term="vpn" scheme="https://wishim.github.io/tags/vpn/"/>
    
      <category term="vps" scheme="https://wishim.github.io/tags/vps/"/>
    
      <category term="vultr" scheme="https://wishim.github.io/tags/vultr/"/>
    
  </entry>
  
</feed>
